class Solution {
    public boolean isValid(String s) {
        
        Stack<Character> stack = new Stack<>();

        if (s.length() % 2 != 0) {
            return false; 
        }

        for (int i = 0; i < s.length(); i++) {
            char ch = s.charAt(i);

            if (ch == '(' || ch == '[' || ch == '{') {
                stack.push(ch);
            } else {
                
                if (!stack.isEmpty()) {
                    char top = stack.pop();

                    
                    if ((ch == ')' && top != '(') ||
                        (ch == ']' && top != '[') ||
                        (ch == '}' && top != '{')) {
                        return false;
                    }
                } else {
                    return false; 
                }
            }
        }

        // If the stack is empty, it means all parentheses are properly matched
        return stack.isEmpty();
    }
}
