/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {

        if(head == null || head.next==null)
        return true;

        Stack<Integer> stack = new Stack<Integer>();

        int length =0;


        ListNode temp = head;
        int i=0;
        while(head!=null)
        {
            length++;
            head = head.next;
        }
        while(temp !=null && i<length/2)
        {
            stack.push(temp.val);
            temp = temp.next;
            i++;
        }

        if(length%2!=0)
        {
            temp = temp.next;
        }
        while(temp!=null)
        {
            if((!stack.isEmpty())&&stack.pop()!=temp.val)
            return false;

            temp = temp.next;
        }
        return true;
    }
}
